---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr-deployment
  namespace: usenet-apps
  labels:
    app: radarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
        - name: radarr
          image: linuxserver/radarr
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "256Mi"
              cpu: "750m"
          ports:
            - containerPort: 7878
          volumeMounts:
            - mountPath: /config
              name: radarr-config
            - mountPath: /downloads
              name: radarr-downloads
            - mountPath: /movies
              name: radarr-movies
      volumes:
        - name: radarr-config
          persistentVolumeClaim:
            claimName: radarr-config-pvc
        - name: radarr-downloads
          hostPath:
            path: /depot/media/Downloads
        - name: radarr-movies
          hostPath:
            path: /depot/media/Movies
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: radarr-config-pvc
  namespace: usenet-apps
spec:
  storageClassName: managed-nfs-storage
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
kind: Service
apiVersion: v1
metadata:
  name: radarr-service
  namespace: usenet-apps
spec:
  selector:
    app: radarr
  ports:
    - protocol: TCP
      port: 7878
      targetPort: 7878
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr-ingress
  namespace: usenet-apps
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: radarr.ng20.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: radarr-service
                port:
                  number: 7878
